version: "3"
services:
  nextjs:
    container_name: nextjs
    build:
      context: ./guru_client
      dockerfile: Dockerfile
    image: nextjs:latest
    restart: unless-stopped
    env_file:
      - ./guru_client/.env
    environment:
      - NODE_ENV=production
      - BASE_URL=http://strapi:1337
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - strapi

  strapi:
    container_name: strapi
    build:
      context: ./guru_server
      dockerfile: Dockerfile
    image: strapi:latest
    restart: unless-stopped
    env_file:
      - ./guru_server/.env
    environment:
      - DATABASE_CLIENT=${DATABASE_CLIENT}
      - DATABASE_HOST=strapiDB
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      - APP_KEYS=${APP_KEYS}
      - NODE_ENV=${NODE_ENV}
    volumes:
      - ./guru_server/config:/opt/app/config
      - ./guru_server/src:/opt/app/src
      - ./guru_server/package.json:/opt/package.json
      - ./guru_server/yarn.lock:/opt/yarn.lock
      - ./guru_server/.env:/opt/app/.env
      - ./guru_server/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - app-network
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64
    restart: unless-stopped
    env_file:
      - ./guru_server/.env
    image: postgres:16.0-alpine
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - app-network

volumes:
  strapi-data:

networks:
  app-network:
    name: app-network
    driver: bridge
